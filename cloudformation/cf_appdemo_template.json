{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation template to create test ECS task and service",
  "Parameters": {
    "TeamName": {
      "Type": "String",
      "Description": "Name of the team"
    },
    "ClusterName": {
      "Type": "String",
      "Description": "Name of the ECS cluster. Note that the ECS cluster must exist"
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the EC2 instances"
    },
    "ElbHealthCheckTarget": {
      "Type": "String",
      "Description": "Optional - Health Check Target for ELB - defaults to HTTP:8080/",
      "Default": "HTTP:8080/order"
    }
  },
  "Resources": {
    "ECSStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3-eu-west-1.amazonaws.com/codecamp2016/cf_ecs_template.json",
        "TimeoutInMinutes": "60",
        "Parameters": {
          "TeamName": {"Ref": "TeamName"},
          "AZ": "eu-west-1a,eu-west-1b",
          "KeyName": {"Ref": "KeyName"},
          "ClusterSize": "2",
          "ClusterName": {"Ref": "ClusterName"}
        }
      }
    },
    "LoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "DependsOn": "ECSStack",
      "Properties": {
        "LoadBalancerName": {
          "Fn::Join": [
            "-",
            [
              {"Ref": "TeamName"},
              "LoadBalancer"
            ]
          ]
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ECSStack",
              "Outputs.ElbSecurityGroup"
            ]
          }
        ],
        "Subnets": [
          {
            "Fn::GetAtt": [
              "ECSStack",
              "Outputs.PubSubnetAz1"
            ]
          },
          {
            "Fn::GetAtt": [
              "ECSStack",
              "Outputs.PubSubnetAz2"
            ]
          }
        ],
        "CrossZone": "true",
        "Listeners": [
          {
            "LoadBalancerPort": "80",
            "InstancePort": "8080",
            "Protocol": "HTTP"
          }
        ],
        "HealthCheck": {
          "Target": {
            "Ref": "ElbHealthCheckTarget"
          },
          "HealthyThreshold": "2",
          "UnhealthyThreshold": "10",
          "Interval": "30",
          "Timeout": "5"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {"Ref": "TeamName"},
                  "LoadBalancer"
                ]
              ]
            }
          }
        ]
      }
    }
  },


  "Outputs" : {
    "LoadBalancerURL": {
      "Description": "Order service loadbalancer DNS name",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "LoadBalancer",
                "DNSName"
              ]
            }
          ]
        ]
      }
    }
  }
}